#!/bin/bash
#
# unicorn
#
# chkconfig: - 85 15
# description: unicorn start/stop script.
#

#
# set rvm environment valiables.
#

export PATH=/usr/local/ruby/bin:/var/rails/bagel/current/sbin:$PATH

set -u
set -e

APP_NAME=<%= application %>
APP_ROOT=<%= current_path %>
CNF="<%= deploy_to %>/shared/config/unicorn.conf"
PID="<%= deploy_to %>/shared/pids/unicorn.<%= unicorn_port %>.pid"
ENV=<%= rails_env %>

#UNICORN_OPTS="-D -E $ENV -c $CNF --path /${APP_NAME}"
UNICORN_OPTS="-D -E $ENV -c $CNF"
UNICORN_CMD="bundle exec unicorn "

old_pid="$PID.oldbin"

cd $APP_ROOT || exit 1

sig () {
        test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
        test -s $old_pid && kill -$1 `cat $old_pid`
}

case ${1-help} in
start)
        sig 0 && echo >&2 "Already running" && exit 0
        cd $APP_ROOT ; $UNICORN_CMD $UNICORN_OPTS
        ;;
stop)
        sig QUIT && exit 0
        echo >&2 "Not running"
        ;;
force-stop)
        sig TERM && exit 0
        echo >&2 "Not running"
        ;;
restart|reload)
        sig HUP && echo reloaded OK && exit 0
        echo >&2 "Couldn't reload, starting instead"
        $UNICORN_CMD $UNICORN_OPTS
        ;;
upgrade)
        sig USR2 && exit 0
        echo >&2 "Couldn't upgrade, starting instead"
        $UNICORN_CMD $UNICORN_OPTS
        ;;
rotate)
        sig USR1 && echo rotated logs OK && exit 0
        echo >&2 "Couldn't rotate logs" && exit 1
        ;;
*)
        echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
        exit 1
        ;;
esac

